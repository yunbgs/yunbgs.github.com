<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: C | 云办公室]]></title>
  <link href="http://yunbgs.github.io/blog/categories/c/atom.xml" rel="self"/>
  <link href="http://yunbgs.github.io/"/>
  <updated>2013-06-04T08:43:44+08:00</updated>
  <id>http://yunbgs.github.io/</id>
  <author>
    <name><![CDATA[yunbgs.com]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[C语言一例子（参数执行顺序，变量存储类型）]]></title>
    <link href="http://yunbgs.github.io/blog/2013/05/31/c-one/"/>
    <updated>2013-05-31T14:23:00+08:00</updated>
    <id>http://yunbgs.github.io/blog/2013/05/31/c-one</id>
    <content type="html"><![CDATA[<p>3个小例子说明实际细节问题，局部变量存在栈中会被编译器优化(从cache或寄存器中读取)，static变量存储在静态区不会被优化，volatile变量存在栈区但它告诉程序每次都要去存放的地方读取。</p>

<pre><code>#include &lt;stdio.h&gt;

int
test(int x,int y,int z){
    printf("x=%d,y=%d,z=%d\n",x,y,z);
    return 0;
}
int
main(){
    int t=1;
    test(t++,t,t++);
    printf("%d,%d,%d\n",t++,t,t++);
    return;
}
</code></pre>

<p>打印结果：</p>

<blockquote><p>x=2,y=3,z=1</p>

<p>4,5,3</p></blockquote>

<pre><code>#include &lt;stdio.h&gt;

int
test(int x,int y,int z){
    printf("x=%d,y=%d,z=%d\n",x,y,z);
    return 0;
}
int
main(){
    static int t=1;
    test(t++,t,t++);
    printf("%d,%d,%d\n",t++,t,t++);
    return;
}
</code></pre>

<p>打印结果：</p>

<blockquote><p>x=2,y=2,z=1</p>

<p>4,4,3</p></blockquote>

<pre><code>#include &lt;stdio.h&gt;

int
test(int x,int y,int z){
    printf("x=%d,y=%d,z=%d\n",x,y,z);
    return 0;
}
int
main(){
    volatile int t=1;
    test(t++,t,t++);
    printf("%d,%d,%d\n",t++,t,t++);
    return;
}
</code></pre>

<p>打印结果：</p>

<blockquote><p>x=2,y=2,z=1</p>

<p>4,4,3</p></blockquote>

<p>volatile定义的变量会在程序外被改变,每次都必须从内存中读取，而不能重复使用放在cache或寄存器中的备份。
同时说明局部变量被优化后结果出现异常。</p>
]]></content>
  </entry>
  
</feed>
